apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: builder
  namespace: cabotage
  labels:
    app: cabotage-builder
spec:
  selector:
    matchLabels:
      app: builder
  replicas: 3
  template:
    metadata:
      labels:
        app: builder
    spec:
      serviceAccountName: builder
      initContainers:
        - name: cabotage-enroller
          image: cabotage/sidecar:v1.0.0a1
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          args:
            - "kube_login"
            - "--namespace=$(NAMESPACE)"
            - "--vault-auth-kubernetes-role=cabotage-builder"
            - "--fetch-cert"
            - "--vault-pki-role=cabotage-builder"
            - "--pod-name=$(POD_NAME)"
            - "--pod-ip=$(POD_IP)"
            - "--service-names=builder"
          volumeMounts:
            - name: vault-secrets
              mountPath: /var/run/secrets/vault
      containers:
        - name: cabotage-sidecar
          image: cabotage/sidecar:v1.0.0a1
          imagePullPolicy: Always
          args:
            - "maintain"
            - "--vault-pki-role=cabotage-registry"
          volumeMounts:
            - name: vault-secrets
              mountPath: /var/run/secrets/vault
        - name: cabotage-sidecar-tls
          image: cabotage/sidecar:v1.0.0a1
          imagePullPolicy: Always
          command: ["./ghostunnel"]
          args:
            - "server"
            - "--keystore=/var/run/secrets/vault/combined.pem"
            - "--cacert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
            - "--timed-reload=300s"
            - "--shutdown-timeout=10s"
            - "--connect-timeout=10s"
            - "--disable-authentication"
            - "--target=unix:///var/run/dockerd/docker.sock"
            - "--listen=0.0.0.0:2375"
          volumeMounts:
            - name: vault-secrets
              mountPath: /var/run/secrets/vault
            - name: docker-sock
              mountPath: /var/run/dockerd
          ports:
            - containerPort: 2375
              name: sdockerd
        - name: builder
          image: cabotage/builder:v1.0.0a1
          imagePullPolicy: Always
          args:
            - "--host=unix:///var/run/dockerd/docker.sock"
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/dockerd
          resources:
            limits:
              cpu: 400m
              memory: 600Mi
            requests:
              cpu: 200m
              memory: 300Mi
      volumes:
        - name: vault-secrets
          emptyDir:
            medium: "Memory"
            sizeLimit: "1M"
        - name: docker-sock
          emptyDir:
            medium: "Memory"
            sizeLimit: "1M"
