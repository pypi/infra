apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: cabotage
  name: minio
spec:
  serviceName: minio
  replicas: 4
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: minio
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - minio
              topologyKey: failure-domain.beta.kubernetes.io/zone
      serviceAccountName: minio
      initContainers:
        - name: cabotage-enroller
          image: cabotage/sidecar:v1.0.0a1
          imagePullPolicy: Always
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          args:
            - "kube_login"
            - "--namespace=$(NAMESPACE)"
            - "--vault-auth-kubernetes-role=cabotage-minio"
            - "--fetch-cert"
            - "--vault-pki-role=cabotage-minio"
            - "--pod-name=$(POD_NAME)"
            - "--pod-ip=$(POD_IP)"
            - "--service-names=minio"
            - "--hostname=$(POD_NAME)"
            - "--subdomain=minio"
          volumeMounts:
            - name: vault-secrets
              mountPath: /var/run/secrets/vault
        - name: minio-script-runner
          image: alpine:3.7
          command: ['/bin/sh']
          args: ['/opt/scripts/write-links.sh']
          volumeMounts:
            - name: minio-config
              mountPath: /root/.minio
            - name: minio-scripts
              mountPath: /opt/scripts
      containers:
      - name: cabotage-sidecar
        image: cabotage/sidecar:v1.0.0a1
        imagePullPolicy: Always
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
          - "maintain"
          - "--vault-pki-role=cabotage-minio"
        volumeMounts:
          - name: vault-secrets
            mountPath: /var/run/secrets/vault
      - name: minio
        env:
        - name: MINIO_ACCESS_KEY
          value: "MINIOACCESSKEY"
        - name: MINIO_SECRET_KEY
          value: "MINIOSECRETKEY"
        image: cabotage/minio:v1.0.0a1
        imagePullPolicy: Always
        args:
        - server
        - "--quiet"
        - https://minio-0.minio.cabotage.svc.cluster.local/data
        - https://minio-1.minio.cabotage.svc.cluster.local/data
        - https://minio-2.minio.cabotage.svc.cluster.local/data
        - https://minio-3.minio.cabotage.svc.cluster.local/data
        ports:
        - containerPort: 9000
        livenessProbe:
          httpGet:
            path: /minio/index.html
            port: 9000
            scheme: HTTPS
            httpHeaders:
            - name: User-Agent
              value: Mozilla
          initialDelaySeconds: 10
        readinessProbe:
         httpGet:
           path: /minio/index.html
           port: 9000
           scheme: HTTPS
           httpHeaders:
           - name: User-Agent
             value: Mozilla
         initialDelaySeconds: 10
        volumeMounts:
        - name: minio-config
          mountPath: /root/.minio
        - name: data
          mountPath: /data
        - name: vault-secrets
          mountPath: /var/run/secrets/vault
      volumes:
        - name: vault-secrets
          emptyDir:
            medium: "Memory"
            sizeLimit: "1M"
        - name: minio-config
          emptyDir:
            medium: "Memory"
            sizeLimit: "1M"
        - name: minio-scripts
          configMap:
            name: minio-scripts
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
